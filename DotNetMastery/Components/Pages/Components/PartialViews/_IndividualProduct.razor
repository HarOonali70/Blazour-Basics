<div class="bg-light border col-6" @onclick="@(e => SelectedProduct(e, Product.Name))">
    <h4 class="text-secondary">Product - @Product.Id</h4>
    <input type="checkbox" @onchange="AddToFaveroutie" /> Add to Favorites <br /><br />


    Name - @Product.Name <br />
    Show Properties :
    <input type="checkbox" @bind="Product.IsActive" />

    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
<_DeleteButtonComponent ProductKey="@Product.Id">
</_DeleteButtonComponent>
</div>

@code {
    [Parameter]
    public Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> onFavert { get; set; }
    [Parameter]
    public EventCallback<string> OnClickSelectedProduct { get; set; }

    private async Task AddToFaveroutie(ChangeEventArgs eventArgs)
    {
        await onFavert.InvokeAsync((bool)(eventArgs.Value ?? false));
    }
    private async Task SelectedProduct(MouseEventArgs eventArgs, string productName)
    {
        await OnClickSelectedProduct.InvokeAsync((string)productName);

    }
}
